:- use_module('../src/score').
:- use_module('../src/mover').
:- begin_tests(scoretest).

mate_in_one([[[color(none),type(empty)],[color(black),type(knight)],[color(black),type(bishop)],[color(black),type(king)],[color(none),type(empty)],[color(black),type(knight)],[color(black),type(rook)],[color(none),type(empty)]],[[color(black),type(rook)],[color(black),type(pawn)],[color(black),type(pawn)],[color(black),type(pawn)],[color(none),type(empty)],[color(black),type(pawn)],[color(black),type(pawn)],[color(black),type(pawn)]],[[color(black),type(pawn)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(pawn)],[color(black),type(pawn)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(bishop)],[color(none),type(empty)],[color(white),type(pawn)],[color(none),type(empty)],[color(white),type(pawn)]],[[color(none),type(empty)],[color(white),type(queen)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(white),type(pawn)],[color(none),type(empty)],[color(white),type(pawn)],[color(none),type(empty)],[color(white),type(pawn)],[color(none),type(empty)],[color(white),type(pawn)],[color(none),type(empty)]],[[color(black),type(king)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(king)],[color(white),type(bishop)],[color(white),type(knight)],[color(white),type(rook)]]]).
empty_special_moves([[[color(black),type(king)],[]],[[color(none),type(empty)],[color(white),type(king)],[]]]).

test(minimax, [nondet]) :-
    mate_in_one(Board),
    empty_special_moves(SpecialMoves),
    minimax([SpecialMoves, Board], current_player(white), [_, BestBoard]),
    board_replace(Board, coordinate(1, 5), [color(none), type(empty)], Board1),
    board_replace(Board1, coordinate(1, 6), [color(white), type(queen)], BestBoard).

take_queen([[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(king)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(pawn)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(white),type(pawn)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(queen)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(queen)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(pawn)],[color(white),type(pawn)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(king)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]]]).
queen_taken([[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(king)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(pawn)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(white),type(pawn)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(black),type(queen)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(pawn)],[color(white),type(pawn)],[color(none),type(empty)]],[[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)],[color(white),type(king)],[color(none),type(empty)],[color(none),type(empty)],[color(none),type(empty)]]]).

test(minimax, [nondet]) :-
    take_queen(Board),
    empty_special_moves(SpecialMoves),
    minimax([SpecialMoves, Board], current_player(black), [_, QueenTakenBoard]), % Moet een keuze maken tussen pion nemen, vijandige queen nemen of tegenstander schaak (niet schaakmat) zetten
    queen_taken(QueenTakenBoard).

:- end_tests(scoretest).
:- run_tests.
:- halt(0).